// Use REMs with a pixel fallback for font sizing.
@mixin font-size($font-size){
  font-size: $font-size;
  font-size: ($font-size / $base-font-size)*1rem;
}

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value/14}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }

  #{$property}: $pxValues;
  #{$property}: $remValues;
}

@font-face {
  font-family: 'EffraItalic';
  src: url("../fonts/effra_std_it-webfont.eot");
  src: url("../fonts/effra_std_it-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/effra_std_it-webfont.woff") format("woff"), url("../fonts/effra_std_it-webfont.ttf") format("truetype"), url("../fonts/effra_std_it-webfont.svg#effraitalic") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'EffraMedium';
  src: url("../fonts/effra_std_md-webfont.eot");
  src: url("../fonts/effra_std_md-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/effra_std_md-webfont.woff") format("woff"), url("../fonts/effra_std_md-webfont.ttf") format("truetype"), url("../fonts/effra_std_md-webfont.svg#effra_mediumregular") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Effra';
  src: url("../fonts/effra_std_rg-webfont.eot");
  src: url("../fonts/effra_std_rg-webfont.eot?#iefix") format("embedded-opentype"), url("../fonts/effra_std_rg-webfont.woff") format("woff"), url("../fonts/effra_std_rg-webfont.ttf") format("truetype"), url("../fonts/effra_std_rg-webfont.svg#effraregular") format("svg");
  font-weight: normal;
  font-style: normal; }