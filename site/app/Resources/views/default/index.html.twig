{% extends 'base.html.twig' %}

{% block title %}{{ video.title }} | {% endblock %}
{% block body %}
        <div class="content-wrapper content--centered">
            <div class="player">
                <div class="player__media">
                    <div class="player__video">
                        <div class="iframe" id="player"></div>
                    </div>
                </div>
                <div class="player__detail">
                    <h3 class="player__label">Now playing</h3>

                    <h2 class="player__title">{{ video.title }}</h2>

                    Requested by {{ video.requestname }}

                    <div class="player__controls">
                        <div class="player__time-indicator">

                        </div>
                        <div class="player__time-duration">
                            {{ video.duration }}
                        </div>
                        <div class="player__mute"><a href="javascript: muteToggle();">mute</a></div>
                    </div>
                </div>
            </div>
            <div class="playlist__wrapper" id="coming-up">
                <h3 class="playlist__title">Coming up</h3>
                <ol class="playlist">
                    <li class="playlist__song">
                        <span class="song__title"></span>
                    </li>
                </ol>
            </div>

            <div class="playlist__wrapper">
                <h3 class="playlist__title">Last 10 songs</h3>
                <ol class="playlist">
                    {% for song in lastSongs %}
                        <li class="playlist__song">
                            <span class="song__title">{{ song.title }}</span>
                        </li>
                    {% endfor %}
                </ol>
            </div>
        </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">
        $(document).ready(function() {
            $('.player__time-duration').text($('.player__time-duration').text().toHHMMSS());
        });
        var player;
        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                height: '390',
                width: '640',
                videoId: '{{ video.youtubeKey }}',
                events: {
                    'onReady': onPlayerReady,
                    'onStateChange': onPlayerStateChange
                },
                playerVars: {
                    controls: 0,
                    disablekb: 1,
                    fs: 0,
                    iv_load_policy: 3,
                    modestbranding: 1,
                    rel: 0
                }
            });
        }
        var done = false;
        function onPlayerStateChange(event) {
            if (event.data == 0) {
                done = true;
                $.ajax({
                    url: '/ajax/set-done/{{ video.id }}'
                }).done(function () {
                    window.location = window.location;
                });
            }
        }
        function muteToggle() {
            if (player.isMuted()) {
                player.unMute();
            } else {
                player.mute();
            }

        }

        /**
         * Parse seconds to HH:MM:SS format
         *
         * @returns {string}
         */
        String.prototype.toHHMMSS = function () {
            var sec_num = parseInt(this, 10);
            var hours   = Math.floor(sec_num / 3600);
            var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
            var seconds = sec_num - (hours * 3600) - (minutes * 60);

            if (hours   < 10) {hours   = "0"+hours;}
            if (minutes < 10) {minutes = "0"+minutes;}
            if (seconds < 10) {seconds = "0"+seconds;}
            return hours+':'+minutes+':'+seconds;
        }
    </script>
{% endblock %}
